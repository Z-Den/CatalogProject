# Generated by Django 5.2 on 2025-05-07 07:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('натуральный', 'Натуральный'), ('с добавлением консервантов', 'С добавлением консервантов'), ('диетический', 'Диетический')], max_length=50, unique=True, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('confirmed', 'Подтвержден'), ('shipped', 'Отправлен'), ('completed', 'Завершен'), ('cancelled', 'Отменен')], default='draft', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Общая сумма')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Скидка (%)')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_orders', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'permissions': [('manage_order', 'Может управлять заказами')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=100, verbose_name='Марка')),
                ('flavor', models.CharField(max_length=100, verbose_name='Вкус')),
                ('volume', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='Объем (л)')),
                ('sugar_content', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Содержание сахара (г/л)')),
                ('is_alcoholic', models.BooleanField(default=True, verbose_name='Алкогольный')),
                ('expiration_date', models.DateField(blank=True, null=True, verbose_name='Срок годности')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Цена за единицу')),
                ('small_wholesale_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Цена мелкий опт')),
                ('small_wholesale_quantity', models.PositiveIntegerField(default=10, verbose_name='Минимальное количество для мелкого опта')),
                ('large_wholesale_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Цена крупный опт')),
                ('large_wholesale_quantity', models.PositiveIntegerField(default=50, verbose_name='Минимальное количество для крупного опта')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'permissions': [('edit_product', 'Может редактировать товары')],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена за единицу')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='catalog.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Позиция заказа',
                'verbose_name_plural': 'Позиции заказов',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='catalog.cart', verbose_name='Корзина')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Позиция в корзине',
                'verbose_name_plural': 'Позиции в корзине',
                'unique_together': {('cart', 'product')},
            },
        ),
    ]
